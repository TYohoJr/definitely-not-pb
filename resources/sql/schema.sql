CREATE TABLE IF NOT EXISTS secret_question(
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    question TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS app_user(
    id                     INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username               TEXT NOT NULL,
    secret_question_id     INT NOT NULL,
    secret_question_answer TEXT NOT NULL,
    password_hash          TEXT,
    is_password_expired    BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT fk_secret_question FOREIGN KEY(secret_question_id) REFERENCES secret_question(id)
);
CREATE TABLE IF NOT EXISTS album(
    id          INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name        TEXT NOT NULL,
    app_user_id INT NOT NULL,
    CONSTRAINT fk_app_user FOREIGN KEY(app_user_id) REFERENCES app_user(id)
);
CREATE TABLE IF NOT EXISTS photo(
    id          INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    app_user_id INT NOT NULL,
    name        TEXT NOT NULL,
    description TEXT NOT NULL,
    s3_bucket   TEXT NOT NULL,
    s3_key      TEXT NOT NULL, 
    file_type   TEXT NOT NULL,
    CONSTRAINT fk_app_user FOREIGN KEY(app_user_id) REFERENCES app_user(id)
);
CREATE TABLE IF NOT EXISTS album_photo(
    id       INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    album_id INTEGER NOT NULL,
    photo_id INTEGER NOT NULL,
    CONSTRAINT fk_album FOREIGN KEY(album_id) REFERENCES album(id),
    CONSTRAINT fk_photo FOREIGN KEY(photo_id) REFERENCES photo(id)
);
CREATE TABLE IF NOT EXISTS error_event(
    id               INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    app_user_id      INTEGER NOT NULL,
    error_message    TEXT NOT NULL,
    user_description TEXT NOT NULL,
    event_timestamp  TIMESTAMP NOT NULL,
    is_resolved      BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT fk_app_user FOREIGN KEY(app_user_id) REFERENCES app_user(id)
);